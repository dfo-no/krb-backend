-- liquibase formatted sql

-- changeset maestro:1
CREATE TABLE IF NOT EXISTS "product"
(
    "id"                    BIGINT NOT NULL,
    "description"           VARCHAR(255),
    "ref"                   VARCHAR(255),
    "title"                 VARCHAR(255),
    "project_id"            BIGINT,
    "requirementvariant_id" BIGINT
);

-- changeset maestro:2
CREATE TABLE IF NOT EXISTS "publication"
(
    "id"                   BIGINT NOT NULL,
    "comment"              VARCHAR(255),
    "date"                 TIMESTAMP WITHOUT TIME ZONE,
    "publicationexportref" VARCHAR(255),
    "ref"                  VARCHAR(255),
    "version"              BIGINT NOT NULL,
    "project_id"           BIGINT
);

-- changeset maestro:3
CREATE TABLE IF NOT EXISTS "project"
(
    "id"          BIGINT NOT NULL,
    "description" VARCHAR(255),
    "ref"         VARCHAR(255),
    "title"       VARCHAR(255)
);

-- changeset maestro:4
CREATE TABLE IF NOT EXISTS "requirement"
(
    "id"          BIGINT NOT NULL,
    "description" VARCHAR(255),
    "ref"         VARCHAR(255),
    "title"       VARCHAR(255),
    "need_id"     BIGINT,
    "project_id"  BIGINT
);

-- changeset maestro:5
CREATE TABLE IF NOT EXISTS "codelist"
(
    "id"          BIGINT NOT NULL,
    "description" VARCHAR(255),
    "ref"         VARCHAR(255),
    "title"       VARCHAR(255),
    "project_id"  BIGINT
);

-- changeset maestro:6
CREATE TABLE IF NOT EXISTS "need"
(
    "id"          BIGINT NOT NULL,
    "description" VARCHAR(255),
    "ref"         VARCHAR(255),
    "title"       VARCHAR(255),
    "project_id"  BIGINT
);

-- changeset maestro:7
CREATE TABLE IF NOT EXISTS "code"
(
    "id"          BIGINT NOT NULL,
    "description" VARCHAR(255),
    "ref"         VARCHAR(255),
    "title"       VARCHAR(255),
    "codelist_id" BIGINT
);

-- changeset maestro:8
CREATE TABLE IF NOT EXISTS "requirementvariant"
(
    "id"               BIGINT  NOT NULL,
    "description"      VARCHAR(255),
    "instruction"      VARCHAR(255),
    "ref"              VARCHAR(255),
    "requirementtext"  VARCHAR(255),
    "useproduct"       BOOLEAN NOT NULL,
    "usequalification" BOOLEAN NOT NULL,
    "usespecification" BOOLEAN NOT NULL,
    "requirement_id"   BIGINT
);

-- changeset maestro:9
CREATE UNIQUE INDEX IF NOT EXISTS "uk_mm9grl0apdmssxs7962c4rych" ON "product" ("ref");

-- changeset maestro:10
CREATE UNIQUE INDEX IF NOT EXISTS "uk_2n3859uh0qy55ofeqbfna8lbf" ON "publication" ("ref");

-- changeset maestro:11
CREATE UNIQUE INDEX IF NOT EXISTS "uk_4xjkhoq5ja3bjeef0pjffas5" ON "project" ("ref");

-- changeset maestro:12
CREATE UNIQUE INDEX IF NOT EXISTS "uk_ie0o9pgsm1hf3k6j5nfmfaf5y" ON "requirement" ("ref");

-- changeset maestro:13
CREATE UNIQUE INDEX IF NOT EXISTS "uk_jmh6e41ldrpxi82qi8sx0wqlt" ON "codelist" ("ref");

-- changeset maestro:14
CREATE UNIQUE INDEX IF NOT EXISTS "uk_mm899on2wlo3il1nbbe17g18n" ON "need" ("ref");

-- changeset maestro:15
CREATE UNIQUE INDEX IF NOT EXISTS "uk_ph3lxbpy278p01m8nt7nm2373" ON "code" ("ref");

-- changeset maestro:16
CREATE UNIQUE INDEX IF NOT EXISTS "uk_q4nn700f4b6p1ywv1b0toipob" ON "requirementvariant" ("ref");

-- changeset maestro:17
CREATE TABLE IF NOT EXISTS "deletedrecord"
(
    "id"        BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    "data"      JSONB,
    "deletedat" TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    "objectid"  BIGINT,
    "tablename" VARCHAR(200),
    "updatedat" TIMESTAMP WITHOUT TIME ZONE
);

-- changeset maestro:18
CREATE TABLE IF NOT EXISTS "publicationexport"
(
    "id"                BIGINT NOT NULL,
    "publicationref"    VARCHAR(255),
    "ref"               VARCHAR(255),
    "serializedproject" TEXT
);

-- changeset maestro:19
CREATE UNIQUE INDEX IF NOT EXISTS "code_pkey" ON "code" ("id");

-- changeset maestro:20
CREATE UNIQUE INDEX IF NOT EXISTS "codelist_pkey" ON "codelist" ("id");

-- changeset maestro:21
CREATE UNIQUE INDEX IF NOT EXISTS "deletedrecord_pkey" ON "deletedrecord" ("id");

-- changeset maestro:22
CREATE UNIQUE INDEX IF NOT EXISTS "need_pkey" ON "need" ("id");

-- changeset maestro:23
CREATE UNIQUE INDEX IF NOT EXISTS "product_pkey" ON "product" ("id");

-- changeset maestro:24
CREATE UNIQUE INDEX IF NOT EXISTS "project_pkey" ON "project" ("id");

-- changeset maestro:25
CREATE UNIQUE INDEX IF NOT EXISTS "publication_pkey" ON "publication" ("id");

-- changeset maestro:26
CREATE UNIQUE INDEX IF NOT EXISTS "publicationexport_pkey" ON "publicationexport" ("id");

-- changeset maestro:27
CREATE UNIQUE INDEX IF NOT EXISTS "requirement_pkey" ON "requirement" ("id");

-- changeset maestro:28
CREATE UNIQUE INDEX IF NOT EXISTS "requirementvariant_pkey" ON "requirementvariant" ("id");

-- changeset maestro:29
drop function if exists deleted_record_insert cascade;

CREATE FUNCTION deleted_record_insert()
    RETURNS trigger
AS
'
    BEGIN
        EXECUTE ''INSERT INTO DeletedRecord (data, deletedAt, objectId, tableName) VALUES ($1, $2, $3, $4)''
            USING to_jsonb(OLD.*), current_timestamp, OLD.id, TG_TABLE_NAME;
        RETURN OLD;
    End;
' LANGUAGE plpgsql;

-- changeset maestro:30
DROP TRIGGER IF EXISTS deleted_record_insert ON Product;
CREATE TRIGGER deleted_record_insert
    AFTER DELETE
    ON Product
    FOR EACH ROW
EXECUTE FUNCTION deleted_record_insert();

DROP TRIGGER IF EXISTS deleted_record_insert ON Publication;
CREATE TRIGGER deleted_record_insert
    AFTER DELETE
    ON Publication
    FOR EACH ROW
EXECUTE FUNCTION deleted_record_insert();

DROP TRIGGER IF EXISTS deleted_record_insert ON Project;
CREATE TRIGGER deleted_record_insert
    AFTER DELETE
    ON Project
    FOR EACH ROW
EXECUTE FUNCTION deleted_record_insert();