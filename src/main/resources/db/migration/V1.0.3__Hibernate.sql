drop function if exists deleted_record_insert cascade;

CREATE FUNCTION deleted_record_insert()
    RETURNS trigger
AS
'
    BEGIN
        EXECUTE ''INSERT INTO DeletedRecord (data, deletedAt, objectId, tableName) VALUES ($1, $2, $3, $4)''
            USING to_jsonb(OLD.*), current_timestamp, OLD.id, TG_TABLE_NAME;
        RETURN OLD;
    End;
' LANGUAGE plpgsql;


create table deletedrecord
(
    id        bigint generated by default as identity
        primary key,
    data      jsonb,
    deletedat timestamp not null,
    objectid  bigint,
    tablename varchar(200),
    updatedat timestamp
);

alter table deletedrecord
    owner to krbadmin;


create table project
(
    id          bigint not null
        primary key,
    description varchar(255),
    ref         varchar(255)
        constraint uk_4xjkhoq5ja3bjeef0pjffas5
            unique,
    title       varchar(255)
);

alter table project
    owner to krbadmin;

create table codelist
(
    id          bigint not null
        primary key,
    description varchar(255),
    ref         varchar(255)
        constraint uk_jmh6e41ldrpxi82qi8sx0wqlt
            unique,
    title       varchar(255),
    project_id  bigint
        constraint fkk0v0b57w2hirou08dy1iwp37x
            references project
);

alter table codelist
    owner to krbadmin;

create table code
(
    id          bigint not null
        primary key,
    description varchar(255),
    ref         varchar(255)
        constraint uk_ph3lxbpy278p01m8nt7nm2373
            unique,
    title       varchar(255),
    codelist_id bigint
        constraint fk1lqk9ceosypuyej2afuw9gjaa
            references codelist
);

alter table code
    owner to krbadmin;

create table need
(
    id          bigint not null
        primary key,
    description varchar(255),
    ref         varchar(255)
        constraint uk_mm899on2wlo3il1nbbe17g18n
            unique,
    title       varchar(255),
    project_id  bigint
        constraint fkg3m1pimbf3d006m9m3ninkioa
            references project
);

alter table need
    owner to krbadmin;

create trigger deleted_record_insert
    after delete
    on project
    for each row
execute procedure deleted_record_insert();

create table publication
(
    id                   bigint not null
        primary key,
    comment              varchar(255),
    date                 timestamp,
    publicationexportref varchar(255),
    ref                  varchar(255)
        constraint uk_2n3859uh0qy55ofeqbfna8lbf
            unique,
    version              bigint not null,
    project_id           bigint
        constraint fk3bdlkg7hbw44x9bvm8jn3nxo6
            references project
);

alter table publication
    owner to krbadmin;

create trigger deleted_record_insert
    after delete
    on publication
    for each row
execute procedure deleted_record_insert();

create table publicationexport
(
    id                bigint not null
        primary key,
    publicationref    varchar(255),
    ref               varchar(255),
    serializedproject text
);

alter table publicationexport
    owner to krbadmin;

create table requirement
(
    id          bigint not null
        primary key,
    description varchar(255),
    ref         varchar(255)
        constraint uk_ie0o9pgsm1hf3k6j5nfmfaf5y
            unique,
    title       varchar(255),
    need_id     bigint
        constraint fk2oc5373q7vuvdggmy9k5qc4bu
            references need,
    project_id  bigint
        constraint fkb5nxrgcuj0wmaubp5w1topw46
            references project
);

alter table requirement
    owner to krbadmin;

create table requirementvariant
(
    id               bigint  not null
        primary key,
    description      varchar(255),
    instruction      varchar(255),
    ref              varchar(255)
        constraint uk_q4nn700f4b6p1ywv1b0toipob
            unique,
    requirementtext  varchar(255),
    useproduct       boolean not null,
    usequalification boolean not null,
    usespecification boolean not null,
    requirement_id   bigint
        constraint fkkpyu5k16bigce2s1t46w36fve
            references requirement
);

alter table requirementvariant
    owner to krbadmin;

create table product
(
    id                    bigint not null
        primary key,
    description           varchar(255),
    ref                   varchar(255)
        constraint uk_mm9grl0apdmssxs7962c4rych
            unique,
    title                 varchar(255),
    project_id            bigint
        constraint fkofwmhm3vgm39pffkltjtw380j
            references project,
    requirementvariant_id bigint
        constraint fkegri7v9cd5wk1ac2ff95bcds8
            references requirementvariant
);

alter table product
    owner to krbadmin;

create trigger deleted_record_insert
    after delete
    on product
    for each row
execute procedure deleted_record_insert();

