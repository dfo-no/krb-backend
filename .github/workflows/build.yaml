name: CI

on:
  push:
    branches:
      - main
      - develop
      - krb-*
      - KRB-*
  release:
    types: [ published ]

jobs:
  # Build

  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: 17

      - name: Build with Maven
        run: make build

      - name: Upload target
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: target
          if-no-files-found: error
          retention-days: 1

  uber-jar:
    name: Ãœber-JAR
    runs-on: ubuntu-latest

    needs:
      - integration-tests
      - tests

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: 17

      - name: Build with Maven
        run: make user_jar

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: uber-jar
          path: target/*.jar
          if-no-files-found: error
          retention-days: 1

  native:
    name: Native
    runs-on: ubuntu-latest

    needs:
      - integration-tests
      - tests
    if: "startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main'"

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          version: latest
          java-version: "17"
          components: native-image
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build native distribution
        run: make native

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: native-linux-x86_64
          path: target/*-runner
          if-no-files-found: error
          retention-days: 1

  # Testing

  tests:
    name: Tests
    runs-on: ubuntu-latest

    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: 17

      - name: Run tests
        run: make test

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest

    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: 17

      - name: Run tests
        run: make integration_test

  # Publishing

  docker:
    name: Docker (JVM)
    runs-on: ubuntu-latest

    needs:
      - integration-tests
      - tests

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download target
        uses: actions/download-artifact@v3
        with:
          name: build
          path: target

      - name: Build docker image
        run: make docker

      - name: Login to GitHub Container Registry
        if: "startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main'"
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push docker image (commit)
        if: "startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main'"
        run: make docker-push

      - name: Push docker-image (main)
        if: "github.ref == 'refs/heads/main'"
        run: |
          make docker-tag version=main
          make docker-push version=main

      - name: Push docker image (release)
        if: "startsWith(github.ref, 'refs/tags/')"
        run: |
          make docker-tag version=latest
          make docker-push version=latest

    #   Deploy

  deploy_development:
    name: Deploy (development)
    runs-on: ubuntu-latest
    needs: uber-jar
    if: "github.ref == 'refs/heads/main'"
    environment:
      name: "Production"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: uber-jar
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: krb-backend-api
          slot-name: "Production"
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_6101935B50D04C189440CA355B835067 }}
          package: "*.jar"

  deploy_production:
    name: Deploy (production)
    runs-on: ubuntu-latest

    needs: uber-jar
    if: "startsWith(github.ref, 'refs/tags/')"

    environment:
      name: "production"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: uber-jar

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: krb-backend-api-prod
          slot-name: "Production"
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHERPROFILE_PROD }}
          package: "*.jar"

